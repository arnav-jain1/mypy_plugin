DEBUG: array() called: FunctionContext(arg_types=[[builtins.list[Any]], [], [], [], [], [], []], arg_kinds=[[<ArgKind.ARG_POS: 0>], [], [], [], [], [], []], callee_arg_names=['object', 'dtype', 'copy', 'order', 'subok', 'ndmin', 'like'], arg_names=[[None], [], [], [], [], [], []], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[<mypy.nodes.ListExpr object at 0x0000019EE5E54700>], [], [], [], [], [], []], context=<mypy.nodes.CallExpr object at 0x0000019EE5AEFB50>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: Inferred shape: [3] with rank 1
Type: numpy.ndarray[tuple[Literal[3]]]
DEBUG: array() called: FunctionContext(arg_types=[[builtins.list[Any]], [], [], [], [], [], []], arg_kinds=[[<ArgKind.ARG_POS: 0>], [], [], [], [], [], []], callee_arg_names=['object', 'dtype', 'copy', 'order', 'subok', 'ndmin', 'like'], arg_names=[[None], [], [], [], [], [], []], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[<mypy.nodes.ListExpr object at 0x0000019EE5E54820>], [], [], [], [], [], []], context=<mypy.nodes.CallExpr object at 0x0000019EE5AEFC70>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: Inferred shape: [2] with rank 1
Type: numpy.ndarray[tuple[Literal[2]]]
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.bool]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.unsignedinteger[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.signedinteger[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.floating[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.complexfloating[Any, Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.number[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.timedelta64]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.bool]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.unsignedinteger[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.signedinteger[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.floating[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.complexfloating[Any, Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.number[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.timedelta64]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.bool]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.unsignedinteger[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.signedinteger[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.floating[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.complexfloating[Any, Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.number[Any]]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.timedelta64]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[3]]], arg_types=[[numpy.ndarray[tuple[Literal[2]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[<mypy.nodes.NameExpr object at 0x0000019EE60B8720>]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.bool]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.unsignedinteger[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.signedinteger[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.floating[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.complexfloating[Any, Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.number[Any]]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.timedelta64]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[numpy.datetime64]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=Any, args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
DEBUG: add ndarray called: MethodContext(type=numpy.ndarray[tuple[Literal[2]]], arg_types=[[numpy.ndarray[tuple[Literal[3]]]]], arg_kinds=[[<ArgKind.ARG_POS: 0>]], callee_arg_names=[None], arg_names=[[None]], default_return_type=numpy.ndarray[Any, numpy.dtype[Any]], args=[[TempNode:15(numpy.ndarray[tuple[Literal[3]]])]], context=<mypy.nodes.OpExpr object at 0x0000019EE5AEFD90>, api=<mypy.checker.TypeChecker object at 0x0000019EEA6D5370>)
benchmarks\test.py:15: error: Shape mismatch  [misc]
Found 1 error in 1 file (checked 1 source file)
